package protocol;

//装备英雄的位置1-6
enum EEquipIndex
{
	EEquipIndex_1 = 1;
	EEquipIndex_2 = 2;
	EEquipIndex_3 = 3;
	EEquipIndex_4 = 4;
	EEquipIndex_5 = 5;
	EEquipIndex_6 = 6;
}

message HeroProp
{
	optional int32 prop_id = 1;//英雄的属性ID
	optional int32 lv = 2;//英雄的属性等级
	optional double prop_val = 3;//英雄经过换算的属性值
	optional int32 prop_type = 4;//英雄的属性类型
	optional bool visible = 5;//当前属性是否启用
}

message HeroEquip
{
	optional uint64 uid = 1;//英雄装备UID
	optional int32 item_id = 2;//英雄装备道具ID
	repeated HeroProp master_hero_props = 4;//主属性
	repeated HeroProp slave_hero_props = 5;//副属性
	optional int32 lv = 6;//等级
	optional uint32 exp = 7;//经验
	optional int32 star = 8;//星星
	optional uint64 card_uid = 9;//隶属卡片
	optional int32 pos = 10;//装备位置
	optional bool be_protected = 11;//是否被保护
}

message HeroPoolInfo
{
	repeated HeroEquip hero_relax = 1;
}

message C2S_GetHeroPoolInfo
{
	optional int32 begin_index = 1;
}

message S2C_UpdateHeroPool
{
	optional int32 res = 1;
	optional HeroPoolInfo hero_pool_info = 2;
}

message C2S_EhanceHeroRequest
{
	optional uint64 uid = 1;
	optional int32 item_id = 2;
	repeated uint64 eat_items = 3;
}

message S2C_EhanceHeroResponse
{
	optional int32 res = 1;
}

message C2S_EquipHeroRequest
{
	optional uint64 uid = 1;
	optional int32 item_id = 2;
	optional int32 equip_index = 3;
	optional uint64 card_uid = 4;
}

message S2C_EquipHeroResponse
{
	optional int32 res = 1;
}

message C2S_UnEquipHeroRequest
{
	optional uint64 uid = 1;
	optional int32 item_id = 2;
	optional int32 equip_index = 3;
}

message S2C_UnEquipHeroResponse
{
	optional int32 res = 1;
}

message C2S_GMAddHeroEquip
{
	optional int32 item_id = 1;
}

message C2S_ProtectHeroEquipRequest
{
	optional uint64 uid = 1;
	optional bool protect = 2;
}

message S2C_ProtectHeroEquipResponse
{
	optional int32 res = 1;
}
