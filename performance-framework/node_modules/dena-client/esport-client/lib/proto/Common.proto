package	protocol;

//
enum EOpenStatus
{
	EOpenStatus_None = 0;
	EOpenStatus_TransServerConfig = 1;//正在传输服务器启动配置
	EOpenStatus_NeedUpdateVer = 2;//需要更新版本
	EOpenStatus_UpdatingVer = 3;//正在更新版本
	EOpenStatus_Ready = 4;		//服务器就绪
	EOpenStatus_Opening = 5;	//服务器开启中
	EOpenStatus_Open = 6;		//服务器开启
	EOpenStatus_Closing = 7;	//服务器关闭中
	EOpenStatus_Mts= 8; 		//服务器维护
	EOpenStatus_Err= 9; 		//服务器异常 
}

enum EServerStatus
{
	EServerStatus_Relax = 1; 	//空闲
	EServerStatus_Normal = 2;	//普通
	EServerStatus_Busy = 3;		//拥挤
	EServerStatus_Forbiden = 4; //需要排队进入
}

enum ZServerType
{				
	ZServerType_GATE = 1;
	ZServerType_DATA = 2;
	ZServerType_GAME = 3; 
	ZServerType_LOG = 4;
	ZServerType_CACHE = 5;
	ZServerType_Cluster = 6;
	ZServerType_GM = 7;
	ZServerType_BATTLE = 8;
	ZServerType_SLAVE = 10;
}

enum ETableType
{
	ETableType_Account = 1;
	ETableType_Server = 2;
	ETableType_Player = 3;
	ETableType_Rank = 4;
	ETableType_PlayerName = 5;
}

enum DBOperateType
{
	DBHandleType_REPLACE = 1;
	DBHandleType_DELETE = 3;
	DBHandleType_QUERY = 4;
	DBHandleType_INSERT = 5;
	DBHandleType_UPDATE = 6;
}

enum ESysMail
{
	ESysMail_Item = 10000;        //道具补偿
	ESysMail_ArenaReward = 10001; //擂台赛奖励
	ESysMail_Maintenance = 10101; //维护补偿
	ESysMail_VipMonth = 10201;    //VIP月卡补偿
	ESysMail_Recruit = 10301;     //明星招募
	ESysMail_RecruitOk= 10302;    //明星招募成功
	ESysMail_Best_Team = 10401;   //最强战队赛季奖励
	ESysMail_Best_Team_Daily = 10402;   //最强战队每日奖励
	ESysMail_neice = 10501;       //内测礼包
	ESysMail_guess = 10601;       //竞猜奖励
	ESysMail_RebateAccount = 10801;       //测试礼包
	ESysMail_RebateRecharge = 10802;      //充值返利
	ESysMail_RebateTest = 10803;          //预约礼包
	ESysMail_RebateAccount_0915 = 10804;  //0915测试礼包
	ESysMail_RebateRecharge_0915 = 10805; //0915充值返利
	ESysMail_AuctionSuccess = 10901;      //转会拍卖成功
	ESysMail_AuctionReturn = 10902;       //转会拍卖价格被超过，返还金额
	ESysMail_GuildApplyRejected = 11001;  //申请入会失败
	ESysMail_GuildExpelled = 11002;       //被开除出公会
	ESysMail_GuildApplyApproved = 11003;  //申请入会成功

}

message	IntBoolPair
{
	optional int32 key = 1;
	optional bool value = 2;
}

message	IntPair
{
	optional int32 key = 1;
	optional int32 value = 2;
}

message	UIntPair
{
	optional uint32 key = 1;
	optional uint32 value = 2;
}

message I4U8Pair
{
	optional int32 key = 1;
	optional uint64 value = 2;
}

message	IntDoublePair
{
	optional int32 key = 1;
	optional double value = 2;
}

message U8Pair
{
	optional uint64 key = 1;
	optional uint64 value = 2;
}

message FU64Pair
{
	optional float key = 1;
	optional uint64 value = 2;
}
