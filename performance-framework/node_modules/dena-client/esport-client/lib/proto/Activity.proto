package protocol;
import "Error.proto";
import "Item.proto";

enum ActivityType {
  ACTIVITY_TYPE_INVALID = 0;
  ACTIVITY_TYPE_TOTAL_RECHARGE = 1;         // 累计充值
  ACTIVITY_TYPE_TOTAL_CONSUME = 2;          // 累计消费
  ACTIVITY_TYPE_SINGLE_RECHARGE = 3;        // 单笔充值
  ACTIVITY_TYPE_LOGIN_EVENT = 4;            // 活动登陆
  ACTIVITY_TYPE_SHOW_LOGIN = 5;             // 显示领取
  ACTIVITY_TYPE_6 = 6;	                    //  显示用（图片）
  ACTIVITY_TYPE_LEVEL_PACKAGE = 7;          // 等级礼包
  ACTIVITY_TYPE_BATTLE_FORCE = 8;           // 战力达到X
  ACTIVITY_TYPE_SPECIAL_LOGIN = 9;          // 特殊登录
  ACTIVITY_TYPE_GAMBLE_COUNT = 10;          // 十连抽次数
  ACTIVITY_TYPE_TOTAL_GAMBLE = 11;          // 累计连抽
  ACTIVITY_TYPE_RECHARGE_COUNT = 12;        // 充值次数
  ACTIVITY_TYPE_SHARE_GAME = 13;            // 分享游戏次数
  ACTIVITY_TYPE_CARD_S_PLUS_COUNT = 14;     // 拥有S+品质选手X个
  ACTIVITY_TYPE_CARD_SHOW_COUNT = 15;       // 图鉴收集 X 只战队
  ACTIVITY_TYPE_RECHARGE_LEVEL = 21;        // 重置>=配置数值后等级达到X级
	
  ACTIVITY_TYPE_PVE_COUNT = 101;            // 联赛征程任意关卡挑战N次
  ACTIVITY_TYPE_STAR_GAME_COUNT = 102;      // 明星试炼成功挑战N次
  ACTIVITY_TYPE_LEAGUE_COUNT = 103;         // 大师联赛挑战N次
  ACTIVITY_TYPE_BEST_TEAM_COUNT = 104;      // 最强战队挑战N次
  ACTIVITY_TYPE_GLORY_COUNT = 105;          // 光辉时刻成功挑战任意关卡N次
  ACTIVITY_TYPE_STAR_LEVEL_UP = 106;        // 任意N个选手升星到X星
  ACTIVITY_TYPE_AWAKEN_COUNT = 107;         // 任意N个选手升到X阶
  ACTIVITY_TYPE_BEST_TEAM_DAN = 108;        // 最强战队达到X段位
}

message ActivityRecord {
  optional int32 sub_id = 1;                // 条目ID
  optional int32 progress = 2;              // 完成进度
  optional bool got_reward = 3;             // True表示已经领过奖了
}

message ActivityGroup {
  optional int32 event_id = 1;              // 活动ID
  repeated ActivityRecord records = 2;      // 这个活动里的条目
}

message ActivityInfo {
  repeated ActivityGroup groups = 1;        // 活动数据
  optional uint64 player_create_time = 2;   // 创角时间
  optional uint64 daily_timestamp = 3;      // 上次重置每日重置活动的时间
  optional uint64 weekly_timestamp = 4;     // 上次重置每周重置活动的时间
  optional uint64 total_recharge = 5;       // 充值总量
}

// 获取活动数据
message C2S_ActivityInfoRequest {
}
message S2C_ActivityInfoResponse {
  optional ActivityInfo activity_info = 1;
}

// 活动任务进度更新
message S2C_ActivityRecordUpdate {
  optional int32 event_id = 1;
  optional int32 sub_id = 2;
  optional int32 progress = 3;
  optional bool got_reward = 4;
}

// 活动奖励
message C2S_ActivityRewardRequest {
  optional int32 event_id = 1;
  optional int32 sub_id = 2;
}
message S2C_ActivityRewardResponse {
  optional ErrorCode error_code = 1;
  repeated Item items = 2;
}

