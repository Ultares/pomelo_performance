package protocol;

enum EAnswerType
{
	EAnswerType_A = 1;
	EAnswerType_B = 2;
	EAnswerType_C = 3;
}

enum EQuestiontype
{
	EQuesttion_One = 1;
	EQuesttion_Two = 2;
	EQuesttion_Three = 3;
}

message AnswerProj
{
	optional uint32      count = 1;  //投注次数
	optional uint32      rate  = 2;  //投注陪率
	optional EAnswerType type  = 3;  //答案类型
	optional string      des   = 4;  //答案描述
}

message QuestionProj
{
	optional EQuestiontype  type      = 1; //问题类型
	optional string  		des_long  = 2; //问题类型
	optional string         des_short = 3; //问题描述(简短)
	repeated AnswerProj     answer    = 4;  //答案详细信息
}

message AnswewrTeam
{
	optional string   name   = 1;//队伍名
	optional string   icon 	 = 2;//队伍图标
}

message AnswerMatch
{
	optional uint32 match_id      		 = 1; //比赛ID
	optional string match_name           = 2; //比赛名字
	optional string match_area           = 3; //赛区
	optional uint32 start_time    		 = 4; //比赛开始投注时间
	optional uint32 match_begin          = 5; //比赛开始时间
	optional bool is_end                 = 6; //是否已经结算
	repeated AnswewrTeam   team          = 7; //比赛队伍
	repeated QuestionProj  question 	 = 8; //可投注项目
	optional uint32 last_update 		 = 9; //上次跟新时间
}

message Answerlist
{
	optional EQuestiontype  question_id = 1;
	optional EAnswerType 	answer_id      = 2;
}

message AnswerWin
{
	optional uint32 		match_id = 1;
	repeated Answerlist 	answer   = 2;
}

message Award
{
	optional uint32  item_id  = 1;
	optional uint32  item_num = 2;
}

message Awardlist
{
	optional EQuestiontype question = 1;
	repeated Award award   = 2;
}

message AnswerSave
{
	optional uint32 count    = 1;//投注额
	optional uint32 question_id   = 2; //问题描述
	optional string question_short= 3; //问题描述
	optional uint32 answer_id    = 4;  //答案描述
	optional string answer_des   = 5;  //答案描述
}

message AnswerRecord
{
	optional uint32 match_id = 1; //比赛ID
	repeated AnswerSave save   = 2;
}

message PlayerAnswerInfo
{
	repeated AnswerMatch   match = 1;//竞猜比赛信息
	repeated AnswerRecord  record = 2;//投注记录
}


message ServerAnswerInfo
{
	repeated AnswerMatch match = 1;//竞猜比赛信息
	repeated AnswerWin   win   = 2;//竞猜结果
}

//竞猜信息更新
message S2C_UpdateAnswerInfoMsg
{
	optional PlayerAnswerInfo play_info = 1;//玩家竞猜信息
	optional ServerAnswerInfo server_info = 2; //服务器竞猜信息
	repeated Awardlist reward = 3;
}

//请求投注
message C2S_AnswerRequest
{
	optional uint32        count    = 1;//投注个数
	optional uint32        match_id = 2;//比赛ID
	optional EQuestiontype question = 3;//问题
	optional string        question_short = 4; //问题描述
	optional EAnswerType   answer         = 5;//答案
	optional string        answer_des     = 6;  //答案描述
}

//投注结果
message S2C_AnswerResponse
{
	optional int32 res = 1;//投注结果
}

//获取竞猜信息
message C2S_GetAnswerInfoRequest
{
}
//获取竞猜信息
message S2C_GetAnswerInfoResponse
{
	optional int32 res = 1;
}


