package protocol;
import "Error.proto";
import "Item.proto";

enum RecruitStepType {
  RECRUIT_STEP_TYPE_INVALID = 0;
  RECRUIT_STEP_TYPE_CHOICE_QUESTION = 1;
  RECRUIT_STEP_TYPE_TASK = 2;
  RECRUIT_STEP_TYPE_BATTLE = 3;
  RECRUIT_STEP_TYPE_NEGOTIATION = 4;
  RECRUIT_STEP_TYPE_EXCHANGE = 5;
}

message RecruitRecord {
  optional uint64 record_uid = 1;                     // 进度数据唯一ID。
  optional uint32 card_id = 2;                        // 明星选手CardID。
  repeated RecruitStepType step_types = 3;            // 依次需要经过哪些类型的步骤，第1个元素表示第一个步骤。
  optional uint32 current_step = 4;                   // 当前在哪一步，0表示已经完成，1表示在第一个步骤，…。
  optional uint32 current_choice_question_step = 5;   // 当前问答环节到了哪一步。
  optional uint32 start_time = 6;                     // 开始时间。
  optional uint32 end_time = 7;                       // 结束时间。
  repeated Item backup_items = 8;
  optional bool negotioation_failed = 9;              // 如果为true，表示之前在磋商阶段失败了。
  optional bool given_up = 10;                        // 如果为true，表示已经放弃了这个明星的招募。
}

message RecruitInfo {
  // optional uint32 timestamp = 1;
  repeated RecruitRecord records = 2;
}

// 获取“明星招募”系统的数据。
message C2S_RecruitInfoRequest {
}
// 更新“明星招募”系统的数据。
message S2C_UpdateRecruitInfo {
  repeated RecruitRecord records = 1;                 // 更新了的进度数据。
  repeated uint64 deleted_record_uids = 2;            // 删除了的进度数据。
}

// 请求完成某个选手的当前的招募阶段。
message C2S_RecruitStepFulfillRequest {
  optional uint64 record_uid = 1;
  optional uint32 current_choice_question_step = 2;   // 当前步骤是问答环节时可以填这个字段：填的话表示做到了哪个问题；不填（或填0）的话表示完成当前步骤。
  optional uint32 negotiation_money_count = 3;        // 磋商阶段投入的谈判资金。当前步骤是磋商环节时需要填这个字段。
  repeated uint64 card_uids = 4;                      // 交易阶段消耗的卡牌的card_uid。当前步骤是交换阶段是需要填这个字段。
}
message S2C_RecruitStepFulfillResponse {
  optional uint64 record_uid = 1;
  optional ErrorCode error_code = 2;
}

// 放弃招募
message C2S_RecruitGiveUpRequest {
  optional uint64 record_uid = 1;
}
message S2C_RecruitGiveUpResponse {
  optional uint64 record_uid = 1;
  optional ErrorCode error_code = 2;
}

