package protocol;
import "Common.proto";
import "Item.proto";
import "Arena.proto";
import "Card.proto";
import "PlayerBasic.proto";

message SnakeData
{
	optional int32 order_id = 1;//蛇道顺序ID
	optional int32 type = 2;//类型 1关卡 2宝箱 3BUFF
	optional int32 status = 3;//状态 0未通过节点 1已通过节点
	repeated IntPair buff_data = 4;//buff详细信息 key:buff_id val:是否被购买 0未买 1已买
	repeated ArenaPlayer opponents = 5;//对手信息
}

message SnakeInfo
{
	optional uint32 next_flush_times = 1;//下次刷新时间
	repeated SnakeData data = 3;//蛇道关卡数据
	optional bool open = 4;//功能是否已经开启true开启了false未开启
	optional int32 cur_order_id = 5;//当前进度
	optional int32 cur_chose_pos = 6;//之前选择的难度-1未选择0简单1普通2困难
	repeated IntPair total_buff = 7;//已经购买的BUFF总和 key:buff_id val:数量
	//repeated IntPair card_sprite = 8;//卡片蛇道精力(废弃)
	optional int32 live_num = 9;//蛇道生命0不可打,X还能失败x次
	optional int32 today_win_num = 10;//今天的胜场
	optional int32 total_win_num = 11;//历史胜场
	repeated U8Pair card_sprite = 12;//卡片蛇道精力
}

//获取蛇道巡回赛信息
message C2S_GetSnakeInfoRequest
{
	optional int32 order_id = 1;
}

//获取蛇道巡回赛信息返回
message S2C_GetSnakeInfoResponse
{
	optional int32 res = 1;
	optional SnakeInfo snake_info = 2;
}

//跟新蛇道巡回赛信息
message S2C_UpdateSnakeInfoMsg
{
	optional SnakeInfo snake_info = 1;
}

//开始蛇道战斗
message C2S_SnakeFightBeginRequest
{
	optional int32 order_id = 1;//当前关卡ID
	optional int32 pos_id = 2;//挑战的对手难度0简单1普通2困难
}

//战斗结果
message S2C_SnakeFightBeginResponse
{
	optional int32 res = 1;//战斗开始结果
}

//挑战对手结果请求
message C2S_SnakeFightResRequest
{

}

//挑战对手结果返回
message S2C_SnakeFightResResponse
{
	optional int32 res = 1;//0成功 x失败
	repeated Item reward_items = 2;
	optional int32 fight_result = 3;//1成功 0失败
	repeated Card old_cards = 4;
	repeated Card new_cards = 5;
	optional BasicInfo old_basic_info = 6;
	optional BasicInfo new_basic_info = 7;
	repeated Resource old_resources = 8;
	repeated Resource new_resources = 9;
}

//购买BUFF
message C2S_BuySnakeBuffRequest
{
	optional int32 buff_id = 1;
}

//购买BUFF返回
message S2C_BuySnakeBuffResponse
{
	optional int32 res = 1;//0成功 x失败
}

//结束BUFF节点
message C2S_BuffEditOverRequest
{
	optional int32 order_id = 1;//当前关卡ID
}

//结束BUFF节点返回
message S2C_BuffEditOverResponse
{
	optional int32 res = 1;//0成功 x失败
}

//获取宝箱
message C2S_SnakeOpenBoxRequest
{
	optional int32 order_id = 1;//当前关卡ID
}

//获取宝箱返回
message S2C_SnakeOpenBoxResponse
{
	optional int32 res = 1;//0成功 x失败
	repeated IntPair reward_items = 2;
}

message C2S_GM_PrepareSnakeTeamRequest
{
}