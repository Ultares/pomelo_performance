package protocol;
import "Common.proto";
import "PlayerBasic.proto";
import "Card.proto";
import "Item.proto";
import "Gamble.proto";
import "Instance.proto";
import "Shop.proto";
import "Arena.proto";
import "Snake.proto";
import "Glory.proto";
import "Club.proto";
import "Task.proto";
import "Battle.proto";
import "Mail.proto";
import "Chat.proto";
import "Bussiness.proto";
import "HeroPool.proto";
import "Recruit.proto";
import "StarGame.proto";
import "Talent.proto";
import "Strategy.proto";
import "BestTeam.proto";
import "Guess.proto";
import "League.proto";
import "ExchangeCenter.proto";
import "Skill.proto";
import "Event.proto";
import "Team.proto";
import "Activity.proto";
import "Guild.proto";
import "ShowHand.proto";
import "AllStar.proto";
import "Error.proto";
import "Answer.proto";
import "CardComment.proto";
import "Holiday.proto";
import "Evaluate.proto";
import "Broadcast.proto";
import "Match.proto";

message EasyBuyRecord {
  optional uint32 item_id = 1;
  optional uint32 buy_count = 2;
}

message BagInfo {
	repeated Item items = 1;
	optional uint32 capacity = 2;
	optional uint64 timestamp = 3;
	repeated EasyBuyRecord easy_buy_records = 4;  // 快速购买的记录，没有的话表示没有买过
}

message GuideInfo
{
	optional string param1 = 2;
	optional string param2 = 3;
	optional bool guide_status = 4;
	optional uint32 guide_id = 5;
	optional bytes param1_bytes = 6;
	optional bytes param2_bytes = 7;
}

message GiftCodeData
{
	optional string prefix = 1;
	optional uint32 time = 2;
	optional string code = 3;
}

message GiftInfo
{
	repeated GiftCodeData codes = 1;
}

message ZLGiftCodeData
{
	optional string code = 1;
	optional uint32 time = 2;
}

message ZLGiftInfo
{
	repeated ZLGiftCodeData codes = 1;
}

message RechargeData
{
	optional string order_id = 1;
	optional int32 status = 2;
}

message OrderProduct
{
	optional string product_id = 1;
	optional uint32 pay_count = 2; //购买次数
	optional uint32 over_time = 3; //月卡类结束时间
	optional uint32 last_reward_time = 4;//上次奖励时间
	optional uint32 limit_num = 5;//限购次数
	optional uint32 last_limit_time = 6;//上次限购刷新时间
}

message RechargeInfo
{
	repeated RechargeData recharge = 1;
	repeated OrderProduct order_product = 2;
	repeated OrderProduct month = 3;
	repeated OrderProduct permanent = 4;
	repeated OrderProduct pack = 5;
}

message ClientData {
  repeated IntPair pairs = 1;
}

message BindPhoneInfo
{
    optional string phone_id = 1;       //手机号
    optional uint32 reward_time = 2;    //领奖时间
}

message PlayerInfo {
	optional uint64 uid = 1;                    // 玩家唯一ID
	optional string account = 2;                // 账号
	optional ZLGiftInfo zl_gift = 6;			// 紫龙礼包
	optional GiftInfo gift_info = 7;            // 礼包激活码
	optional GuideInfo guide_info = 8;          // 引导信息
	optional BasicInfo basic_info = 9;          // 俱乐部基本信息
	optional BagInfo bag_info = 10;             // 背包信息
	optional CardInfo card_info = 11;           // 选手信息
	optional GambleInfo gamble_info = 12;       // 抽卡信息
	optional InstanceInfo instance_info = 13;   // pve信息
	optional ShopInfo shop_info = 14;			// 商店信息
	// repeated Resource resources = 15;           // 各种资源
	optional ArenaInfo arena_info = 16;         // 擂台赛信息
	optional SnakeInfo snake_info = 17;         // 蛇道巡回赛信息
	optional GloryInfo glory_info = 18;         // 光辉时刻
	optional BattleInfo battle_info = 19;       // 玩家正在进行的战斗的类型（服务器用）
	optional ClubInfo club_info = 20;           // 俱乐部经营信息
	// repeated AutoEnhanceRes auto_info = 21;		// 自动资源累加信息
	optional MailInfo mail_info = 22;			// 邮件信息
	optional TaskInfo task_info = 23;           // 任务/成就信息
	optional ChatInfo chat_info = 24;			// 聊天信息
	optional BussinessInfo buss_info = 25;		// 经营中心
	optional HeroPoolInfo hero_info = 26;		// 英雄池
	optional ResourceInfo resource_info = 27;   // 资源信息
	optional RecruitInfo recruit_info = 28;     // 明星招募系统
	optional StarGameInfo star_game_info = 29;  // 明星试练
	optional TalentInfo talent_info = 30;       // 天赋（战术）
	optional StrategyInfo strategy_info = 31;   // 战略
	optional BestTeamInfo best_team_info = 32;  // 最强战队
	optional BetInfo bet_info = 33;				// 竞猜
	optional LeagueInfo league_info = 34;       // 大师联赛
	optional ExchangeCenterInfo ex_center_info = 35;//转会中心
	optional RotateDishInfo rotate_info = 36;   // 转盘
	optional SkillInfo skill_info = 37;         // 技能信息
	optional EventInfo event_info = 38;         // 赞助商/俱乐部事件
	optional CardShowInfo card_show = 39;		// 卡片图鉴
	optional RechargeInfo recharge_info = 40;	// 预处理订单
	optional ActivityInfo activity_info = 41;   // 活动数据
	optional PlayerGuildInfo player_guild_info = 42;  // 公会数据
	optional ClientData client_data = 43;       // 记录红点等状态
	optional ShowHandData show_hand_info = 44;  //梭哈游戏数据
	optional PlayerAnswerInfo answer_info = 45; //答题
	optional AllStarInfo allstar_info = 46;		//全明星赛数据
	optional CardCommentInfo cardcomment_info = 47;		//卡牌评论数据
	optional PlayerHoliday holiday_info = 48;	//假日小憩数据
	optional EvaluateInfo evaluate_info = 49;	//评价记录
    optional BindPhoneInfo bindphone_info = 50; //绑定手机信息
    optional BroadCastInfo broadcast_info = 51; //直播信息
	optional MatchInfo match_info = 52;	        // 跨服PVP信息
}

// 登录请求
message S2S_LoginRequest {
	required uint64 player_id = 1;
	required string account = 2;
	optional string channel = 3;
}

// 登录请求
message C2S_XLLoginRequest {
	optional S2S_LoginRequest request = 1;
}

// 登陆结果
message S2C_LoginResponse {
	required uint32 result = 1; // 0表示成功,其他值表示失败
	optional PlayerInfo player_info = 2;
}

// 玩家基本数据发生变化,客户端只更新basic_info存在的字段
message S2C_UpdateBasicInfo {
	optional BasicInfo basic_info = 1;
}

//保存引导信息
message C2S_SaveGuideInfoRequest
{
	optional GuideInfo guide_info = 1;
}
//保存引导信息返回
message S2C_SaveGuideInfoResponse
{
	optional int32 res = 1;
	repeated IntPair reward_items = 2; //道具奖励
}

message S2C_UpdateGuideInfoMsg
{
	optional GuideInfo guide_info = 1;
}

message C2S_GetBagInfoRequest{
}

message S2C_GetBagInfoResponse{
	optional BagInfo bag_info = 1;
}

// 获取玩家资源信息
message C2S_GetResoucesRequest {
}

// 获取玩家资源信息的回复
message S2C_GetResoucesResponse {
	repeated Resource resources = 1;
	repeated AutoEnhanceRes auto_info = 2;      // 自动资源累加信息
}

// 更新玩家资源信息的通知
message S2C_UpdateResources {
	repeated Resource resources = 1;
	optional int32 reason = 2;
	repeated AutoEnhanceRes auto_info = 3;      // 自动资源累加信息
}

// 获取玩家自动获取资源信息
message C2S_GetAutoEnhanceResRequest {
}

// 获取玩家自动获取资源信息回复
message S2C_GetAutoEnhanceResResponse {
	repeated AutoEnhanceRes auto_info = 1;
}

message C2S_GetRechargeInfoRequest
{
}

message S2C_UpdateRechargeInfoMsg
{
	optional RechargeInfo recharge_info = 1;
	optional int32 res = 2;
	optional string last_product_id = 3;
	optional bytes last_order_id = 4;
}

message C2S_GetPlayerSimpleInfoRequest
{
	optional uint64 player_id = 1;
}

message combatforce_simple
{
	optional uint64 combatforce = 1;
}

message best_team_simple
{
	optional uint64 best_team_score = 1;
	optional uint32 dan = 2;
}

message league_simple
{
	optional uint64 league_score = 1;
}

message S2C_GetPlayerSimpleInfoResponse
{
	optional int32 res = 1;
	optional uint64 player_id = 2;
	optional uint32 level = 3;
	optional string account = 4;
	optional string name = 5;
	optional CardInfo card_info = 6;
	repeated CardProp card_prop = 7;
	repeated combatforce_simple combatforce = 8;
	repeated best_team_simple best_team_score = 9;
	repeated league_simple league_score = 10;
	optional uint32 icon = 11;
	optional uint32 touxiang = 12;
	optional uint32 biankuang = 13;
	optional string guild_name = 14;
}

message C2S_GetPropRequest
{
	optional uint64 player_id = 1;
	optional uint64 card_uid = 2;
	optional uint32 card_id = 3;
	optional bool need_recalc = 4;
}

message S2C_GetPropResponse
{
	repeated CardProp card_base = 1;
	repeated CardProp card_ex = 2;
	optional uint32 battle_force = 3;
}

message S2C_BeforeBattleErrResponse
{
	optional ErrorCode error_code = 1;
}

// 快速购买
message C2S_EasyBuyRequest {
  optional uint32 item_id = 1;
}
message S2C_EasyBuyResponse {
  optional ErrorCode error_code = 1;
  optional uint32 cost_item_id = 2;     // 花费的道具ID
  optional uint32 cost_item_count = 3;  // 花费的道具数量
  optional Item item = 4;               // 购买到的东西
  optional EasyBuyRecord easy_buy_record = 5;
}

// 告知服务器分享过了
message C2S_ClientShareGame {
}

// 获取客户端用的状态
// 服务器保存一个key-value的映射（字典/表/Table/std::map），保存在repeated IntPair pairs里
// 客户端通过C2S_GetClientDataRequest获取；通过C2S_SaveClientDataRequest保存特定key的value值
// repeated IntPair pairs的长度不能超过100
message C2S_GetClientDataRequest {
}
message S2C_GetClientDataResponse {
  optional ErrorCode error_code = 1;
  repeated IntPair pairs = 2;
}

// 记录客户端用的状态
message C2S_SaveClientDataRequest {
  optional IntPair pair = 1;
}
message S2C_SaveClientDataResponse {
  optional ErrorCode error_code = 1;
  optional IntPair pair = 2;
}

message AppraiseData
{
	optional int32 status = 1; //0普通 1热评
	optional bytes message = 2;
	optional int32 zan = 3;//赞数
	optional bytes name = 4;//玩家名字
	optional uint64 uid = 5;//玩家UID
	optional bool own_zan = 6;//自己是否赞过
}

message C2S_GetCardAppraiseRequest{
  optional uint32 card_id = 1;
}

message S2C_GetCardAppraiseResponse{
  optional uint32 card_id = 1;
  repeated AppraiseData appraise_datas = 2;
}

message C2S_AppraiseCardRequest{
  optional uint32 card_id = 1;
  optional AppraiseData appraise_data = 2;
}

message S2C_AppraiseCardResponse{
  optional uint32 card_id = 1;
  optional int32 res = 2;//评价结果
  optional AppraiseData appraise_data = 3;
}

message C2S_ZanCardRequest{
  optional uint32 card_id = 1;
}

message S2C_ZanCardResponse{
  optional int32 res = 1;//赞的结果
  optional uint32 card_id = 2;//赞的卡片
  optional AppraiseData appraise_data = 3;
}

// 请求绑定手机信息
message C2S_BindPhoneRequest {

}

message S2C_BindPhoneResponse {
    optional string phone_number = 1;
    optional bool reward_get = 2;   // 奖励是否领取
}

// 请求领取绑定手机奖励
message C2S_BindPhoneRewardRequest {
    optional string phone_number = 1;
}

message S2C_BindPhoneRewardResponse {
    optional int32 retcode = 1;
}
