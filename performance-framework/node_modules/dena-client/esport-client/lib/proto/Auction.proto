package protocol;
import "Error.proto";

message AuctionCard {
  optional uint32 auction_index = 1;          // 第几个拍卖的卡牌
  optional uint32 cost_item_id = 2;           // 购买所需的物品ID
  optional uint32 cost_item_count = 3;        // 购买所需的物品数量
  optional uint32 card = 4;
  // optional uint32 star = 5;
  optional string buyer_name = 6;             // 竞价人战队名（没有这个字段或长度为0表示没有竞价人）
  optional uint64 buyer_uid = 7;
}

message AuctionInfo {
  optional int32 index = 1;                   // M_auctionlist.xlsx中的ID
  repeated AuctionCard auction_cards = 2;
  optional uint64 begin_time = 3;             // 开始时间
  optional uint64 end_time = 4;               // 结束时间
}

// 进入拍卖大厅（进入大厅的玩家才会收到价格变动的通知）
// 并获取拍卖物品信息
message C2S_AuctionEnterRequest {
}
message S2C_AuctionEnterResponse {
  optional ErrorCode error_code = 1;
  optional AuctionInfo new_auction_info = 2;  // 新一期的东西，或当前正在拍卖的东西
  optional AuctionInfo old_auction_info = 3;  // 旧一期的东西
  optional uint32 count_down = 4;             // 倒计时的秒数
}

// 离开拍卖大厅
message C2S_AuctionLeaveRequest {
}
message S2C_AuctionLeaveResponse {
  optional ErrorCode error_code = 1;
}

// 某个卡牌的价格变动时由服务器主动通知客户端
message S2C_AuctionCardNotify {
  optional int32 index = 1;
  optional uint32 auction_index = 2;
  optional uint32 cost_item_count = 3;
  optional string buyer_name = 4;
  optional uint32 count_down = 5;             // 倒计时的秒数
}
// 跨天后主动通知在拍卖大厅的玩家新的拍卖卡牌
message S2C_AuctionInfoNotify {
  optional AuctionInfo auction_info = 1;
  optional uint32 count_down = 2;             // 倒计时的秒数
}

// 向某个拍卖物品出价
message C2S_AuctionBuyRequest {
  optional int32 index = 1;
  optional uint32 auction_index = 2;
  optional uint32 cost_item_count = 3;      // 拍买时物品的原价（多个玩家同时点时区分同种出价的）
}
message S2C_AuctionBuyResponse {
  optional ErrorCode error_code = 1;
  optional AuctionInfo auction_info = 2;    // 如果出价成功，这个字段表示更新后的物品价格
  optional uint32 count_down = 3;
}

