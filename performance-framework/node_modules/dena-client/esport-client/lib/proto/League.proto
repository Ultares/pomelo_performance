package protocol;
import "Error.proto";
import "Card.proto";
import "PlayerBasic.proto";
import "Item.proto";

enum LeagueTitleStatus {
  LEAGUE_TITLE_STATUS_UPGRADE = 0;                  // 正常状态，此时battle_count表示在晋级之后比赛了多少场
  LEAGUE_TITLE_STATUS_DOWN_GRADE = 1;               // 刚降级，可以选择保级
  LEAGUE_TITLE_STATUS_SAVE_GRADE = 2;               // 被保级了，此时battle_count表示保级之后比赛了多少场；场次用完了之后进入正常状态
}

enum LeagueEventType {
  LEAGUE_EVENT_BATTLE = 0;                          // 战斗
  LEAGUE_EVENT_FAN_GIFT = 1;                        // 粉丝礼包
  LEAGUE_EVENT_REPORT = 2;                          // 战局报告
  LEAGUE_EVENT_STAR_VISIT = 3;                      // 明星来访
}

message LeagueInfo {
  optional uint64 timestamp = 1;                    // 时间戳
  optional int32 rating = 2;                        // 积分
  optional int32 rank = 3;                          // 排名
  optional int32 title = 4;                         // 段位（联赛）
  optional int32 high_title = 5;                    // 达到过的最高段位（这个段位及以下段位的晋级奖励都领过了）
  optional LeagueTitleStatus title_status = 6;      // 晋级状态
  optional int32 battle_count = 7;                  // 当前状态下的比赛次数
  optional int32 save_grade_count = 8;              // 今日保级次数
  optional int32 daily_win_count = 9;               // 今日胜场次数
  repeated int32 daily_win_rewards = 10;            // 已经领过了的每日胜场奖励（比如3、5、7表示3胜奖励、5胜奖励、7胜奖励）
  optional int32 total_battle_count = 11;           // 总场次
  optional int32 total_win_count = 12;              // 总胜场次数
  optional int32 consecutive_win_or_lose = 13;      // 连胜或连败次数，正数表示连胜、负数表示连败
  repeated LeagueEventType daily_events = 14;       // 今天已经发生过的事件，除战斗之外的事件每天最多触发一次
  optional int32 weekday = 15;                      // 赛程的第几天（1~7中的一个数）
  optional int32 schedule_id = 16;                  // 所在的赛程ID
}


// 获取联赛相关数据
message C2S_LeagueInfoRequest {
}
message S2C_LeagueInfoUpdate {
  optional LeagueInfo league_info = 1;
}

// 进入联赛下一轮
message C2S_LeagueEventRequest {
}
message S2C_LeagueEventResponse {
  optional ErrorCode error_code = 1;                // 可能为EC_NoLeagueEvent
  optional LeagueEventType event_type = 2;          // 事件类型
  optional BasicInfo opponent_basic_info = 3;       // 事件为LEAGUE_EVENT_BATTLE时这个字段表示对手基本信息
  repeated Card opponent_cards = 4;                 // 事件为LEAGUE_EVENT_BATTLE时这个字段表示对手阵容
  repeated Item reward_items = 5;                   // LEAGUE_EVENT_BATTLE之外的事件可能获得奖励
}

// 联赛战斗准备完毕、进入战斗
message C2S_LeagueBattleRequest {
}

// 领取联赛每日奖励
message C2S_LeagueDailyRewardRequest {
  optional int32 daily_win_count = 1;               // 奖励档次（比如3表示3胜奖励）
}
message S2C_LeagueDailyRewardResponse {
  optional ErrorCode error_code = 1;
  repeated Item reward_items = 2;
}

// 保级，title_status=LEAGUE_TITLE_STATUS_DOWN_GRADE 时可以发送请求
message C2S_LeagueRescureRequest {
}
message S2C_LeagueRescureResponse {
  optional ErrorCode error_code = 1;
}
