package protocol;
import "Error.proto";

message Item {
	optional uint64 uid = 1;				// 道具唯一ID
	optional uint32 item_id = 2;			// 道具类型
	optional uint32 count = 3;				// 堆叠数量,不可堆叠的物品此数量为1
	optional uint32 get_time = 4;			// 获得时间
}

// 使用物品请求
message C2S_UseItem {
	optional uint64 item_uid = 1;
	optional uint32 item_count = 2;
}

// 使用物品请求的回复
message S2C_UseItemResult {
	optional uint32 result = 1;             // 0表示成功,其他值表示失败
	optional uint64 item_uid = 2;
	optional uint32 item_count = 3;         // 0表示使用所有
}

// 出售道具请求
message C2S_SellItem {
	optional uint64 item_uid = 1;
	optional uint32 item_count = 2;
}

// 出售道具的回复
message S2C_SellItemResult {
	optional uint32 result = 1;             // 0表示成功,其他值表示失败
	optional uint64 item_uid = 2;
	optional uint32 item_count = 3;         // 0表示出售所有
}

// 增加物品等内容,调试用
message C2S_AddItem {
	optional uint32 item_id = 1;
	optional uint32 item_count = 2;
	optional uint32 card_id = 3;			// 增加选手
	optional uint32 player_level = 4;		// 设置俱乐部等级
	optional uint64 add_exp_card_uid = 5;
	optional uint32 add_exp_card_exp = 6;
	optional uint32 player_exp = 7;
	repeated int32 pve_hero_ids = 8; // 固定10个英雄ID
	optional bool set_battle_result = 9;     // 如果有这个字段，则设置当前战斗的胜负（true表示胜利，false表示失败），之后不需要再发LeaveBattle
}

// 道具发生变化（增加/更新/删除道具）
message S2C_UpdateItems {
	repeated Item updated_item = 2;			// 新的uid表示新增道具,旧的uid表示更新道具
	repeated uint64 deleted_item_uid = 3;
	repeated Item overflowed_items = 4;     // 背包满后没有放进背包的物品,通过邮件系统发送
}

// 使用礼包请求（也可以通过C2S_UseItem来开礼包,但是用C2S_UseItem的话就不会回复S2C_OpenPackageResponse了）
message C2S_OpenPackageRequest {
  optional uint64 item_uid = 1;         // 打开哪个礼包
  optional uint32 item_count = 2;       // 填1（一次打开多少个礼包）
}
// 使用礼包回复
message S2C_OpenPackageResponse {
  optional ErrorCode result = 1;
  repeated Item received_items = 2;
}

// 道具合成请求
message C2S_ItemComposeRequest {
  optional uint32 item_id = 1;            // 目标物品的ID
  optional uint32 item_count = 2;         // 目标物品的数量
}
// 道具合成回复
message S2C_ItemComposeResponse {
  optional ErrorCode result = 1;
  optional uint32 item_id = 2;            // 目标物品的ID
  optional uint32 item_count = 3;         // 目标物品的数量
}


