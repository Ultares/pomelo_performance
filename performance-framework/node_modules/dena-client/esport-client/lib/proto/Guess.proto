package protocol;
import "Common.proto";

enum EGuessType
{
	EBetType_Win = 1;
	EBetType_Mvp = 2;
	EBetType_Kill = 3;
	EBetType_Assist = 4;
	EBetType_Tower = 5;
}

enum EBetProj
{
	EBetProj_Team = 1;
	EBetProj_Top = 2;
	EBetProj_Jungler = 3;
	EBetProj_Mid = 4;
	EBetProj_Adc = 5;
	EBetProj_Support = 6;
}

enum EBetTeam
{
	EBetTeam_1 = 1;
	EBetTeam_2 = 2;
}

message BetDynamic
{
	optional uint32 bet_count = 1;//一次投注额度
	repeated FU64Pair rate = 2;//陪率
	optional uint32 res_type = 3;//投注货币类型
	optional EGuessType guess_type = 4;//竞猜类型
}

message BetProj
{
	optional string name = 1;//选择名字
	repeated BetDynamic bet_dynamic = 2;//竞猜类型详细信息
	optional EBetProj bet_proj_type = 3;//竞猜目标
	optional string icon = 4;//队员图标
}

message BetTeam
{
	repeated BetProj bet_proj = 1;//可投注项目
	optional string team_name = 3;//队伍名
	optional string team_icon = 4;//队伍图标
	optional EBetTeam team_type = 5;//队伍枚举
	optional uint32 team_bet_count = 6;//当前队伍投注总额
}

message BetMatch
{
	optional uint32 start_time = 1;//比赛开始投注时间
	optional uint32 match_id = 2;//比赛ID
	optional uint32 bet_stop_time = 3;//投注关闭时间
	repeated BetTeam bet_team = 4;//竞猜队伍
	optional uint32 last_update = 5;//上次跟新时间
	optional bool is_end = 6;//是否已经结算
	optional string match_name = 7;//比赛名字
	optional string match_area = 8;//赛区
	optional uint32 match_begin = 9;//比赛开始时间
}

message ResType
{
	optional EBetTeam team = 1;
	optional EGuessType guess_type = 2;
	optional EBetProj proj = 3;
	optional string proj_name = 4;
}

message BetResWin
{
	optional uint32 match_id = 1;
	repeated ResType res_type = 2;
}

message BetSave
{
	optional uint32 bet_count = 1;//投注额
	optional int32 bet_type = 2;//投注资源类型
	optional uint32 datetime = 3;//日期
	optional string team_name = 4;//队伍名
	optional string choice = 5;//选择 选手"选手名"
	optional float rate = 6;//赔率
	optional EBetTeam team = 7;
	optional EGuessType guess_type =8;
	optional EBetProj proj = 9;
}

message BetRecord
{
	repeated BetSave bet_save = 1;//竞猜记录
	optional uint32 match_id = 2;//比赛ID
}

message BetInfo
{
	repeated BetRecord bet_record = 1;//投注记录
	repeated BetMatch bet_match = 2;//竞猜结算记录(服务器用)
	optional uint32 last_calc = 3;//上次结算时间
}

message ServerBetInfo
{
	repeated BetMatch bet_match = 1;//竞猜比赛信息
	repeated BetResWin bet_win = 2;//竞猜结果
}

//竞猜信息更新
message S2C_UpdateBetInfoMsg
{
	optional BetInfo bet_info = 1;//竞猜信息
	optional ServerBetInfo server_bet_info = 2;//服务器竞猜信息
}

//投注
message C2S_BetRequest
{
	optional uint32 count = 1;//投注个数
	optional int32 bet_type = 2;//投注资源类型
	optional uint32 match_id = 3;//比赛ID
	optional EGuessType guess_type = 4;//竞猜类型
	optional EBetProj bet_proj_type = 5;//投注项唯一标识
	optional EBetTeam team_id = 6;//队伍ID
}

//投注结果
message S2C_BetResponse
{
	optional int32 res = 1;//投注结果
}

//获取竞猜信息
message C2S_GetBetInfoRequest
{
}

message S2C_GetBetInfoResponse
{
	optional int32 res = 1;
}