package protocol;
import "Arena.proto";

enum ERankType
{
	ERankType_Combatforce =	1;// 战力榜
	ERankType_Snake = 2;
	ERankType_BestTeam = 3;
	ERankType_League = 4;
	ERankType_Arena = 5;
}

enum ELBBestTeamDivision
{
	ELBBestTeamDivision_Master = 0;
	ELBBestTeamDivision_Diamond = 1;
	ELBBestTeamDivision_Platnum = 2;
	ELBBestTeamDivision_Gold = 3;
	ELBBestTeamDivision_Total = 4;
}

enum ECombatForceSubRank
{
	ECombatForceSubRank_Main = 0;
}

enum EBestTeamSubRank
{
	EBestTeamSubRank_Main = 0;
}

enum ELeagueSubRank
{
	ELeagueSubRank_Main = 0;
}

message RankData
{
	optional uint32 position = 1;//名次
	optional uint64 uid = 2;//玩家id
	optional string name = 3;//玩家名字
	optional uint32 lv = 4;//等级
	optional uint32 combat_force = 5;//战力
	optional uint32 times = 6;//数据产生时间
	optional uint64 compare_key = 7;//通用排名基础键
	optional int32  battle_team_id = 8; // 对手战队ID
	optional ArenaPlayer rank_player = 9;//玩家卡片数据
}

message RankInfo
{
	optional string global_sid = 1;
	optional string rank_type = 2;
	repeated RankData rank_data = 3;
}

//获取排行信息
message C2S_GetRankInfoByTypeRequest
{
	optional int32 rank_type = 1;
	optional int32 begin_index = 2;//0表示第一名,以此类推
}

//获取排行信息返回
message S2C_GetRankInfoByTypeResponse
{
	optional int32 res = 1;
	optional RankInfo rank_info = 2;
	optional int32 own_rank = 3;//-1表示还未进入排名,X表示第X名 
}

message LeaderboardScoreData
{
	optional uint64 uid = 1;//玩家id
	optional uint64 score = 2;
	optional uint32 timestamp = 3;
}

message LeaderboardData
{
	optional uint32 position = 1;//名次
	optional uint64 uid = 2;//玩家id
	optional string name = 3;//玩家名字
	optional uint32 lv = 4;//等级
	optional uint32 combat_force = 5;//战力
	optional uint32 timestamp = 6;//数据产生时间
	optional int32  icon_id = 7; // 图标ID
	optional uint64 score = 8;
}

//获取排行信息
message C2S_GetLeaderboardRankListRequest
{
	optional uint32 type = 1;
	optional uint32 sub_type = 2;
	optional int32 start_rank = 3;//从1开始
	optional uint32 count = 4; //最大值20
}

//获取排行信息返回
message S2C_GetLeaderboardRankListResponse
{
	required int32 res = 1;
	required uint32 type = 2;
	required uint32 sub_type = 3;
	required int32 start_rank = 4;
	repeated LeaderboardData rank_list = 5;
	optional int32 last_top_count = 6;
	repeated uint64 current_top_list = 7;
	optional int32 refresh_left_sec = 8; //-1表示不会刷新
	optional uint32 own_sub_type = 9;	//自己的排名子类型
	optional LeaderboardData own_rank = 10;//自己的排名,0表示未进榜 
}


