package protocol;
import "Common.proto";
import "Card.proto";
import "PlayerBasic.proto";

enum EMatchStatus
{
	EMatchStatus_None = 0;
	EMatchStatus_Matching = 1;
	EMatchStatus_Wait_Ready = 2;
	EMatchStatus_Ready_Ok = 3;
	EMatchStatus_InBattle = 4;
	EMatchStatus_Offline = 5;
};

message BestTeamRecord
{
	optional bytes name = 1;
	optional uint32 times = 2;
	optional bool is_win = 3;
	optional int32 red_sc = 4;
	optional int32 blue_sc = 5;
}

message DayRecord
{
	optional uint32 zero_times = 1;
	repeated BestTeamRecord match_record = 2;
}

message BestTeamInfo
{
	optional uint32 score = 3;//战队积分
	optional uint32 match_num = 4;//历史战斗次数
	optional uint32 win_num = 5;//胜场
	//optional float kda_prob = 6;//平均kda
	optional int32 multi_win_lose = 7;//连胜负场次
	optional uint32 rank = 8;//排名
	optional int32 season = 9;//所在赛季
	optional string kda_prob = 10;//平均kda
	optional int32 dan = 11;//段位
	optional int32 protect_time = 12;//掉段保护次数
	optional bytes kda_prob_bytes = 13;
	repeated DayRecord day_record = 14;//战斗记录
}

//获取最强战队信息
message C2S_GetMatchBestTeamRequest
{
	optional uint32 record_begin_time = 1;
}

message C2S_GetMatchRecordRequest
{
	optional uint32 record_begin_time = 1;
}

//最强战队信息刷新
message S2C_UpdateMatchBestTeamInfoMsg
{
	optional BestTeamInfo best_team_info = 1;//最强战队信息
	repeated UIntPair open_time_pair = 2;//每天开启时间信息
	optional uint32 season_id = 3;//赛季标记
	optional int32 res = 4;//获取战队信息结果
	optional uint32 season_start_time = 5;//周期开始时间
	optional uint32 season_over_time = 6;//周期结束时间
	optional EMatchStatus status = 7;
}

message S2C_GetMatchRecordResponse
{
	repeated DayRecord day_record = 1;//战斗记录
}

//匹配战队
message C2S_MatchBestTeamRequest
{
	optional bool want_match = 1;
}

//匹配战队结果
message S2C_MatchBestTeamResponse
{
	optional int32 res = 1;
	optional bool want_match = 2;
}

///匹配对手详细信息
message S2C_MatchOppInfoMsg
{
	repeated Card cards = 2;
	optional uint32 rank = 3;
	optional uint32 score = 4;
	optional BasicInfo basic_info = 5;
	optional uint64 player_id = 6;
}

//战斗准备
message C2S_MatchReadyRequest
{
}

//战斗准备结果返回
message S2C_MatchReadyResponse
{
	optional int32 res = 1;
}

//战斗准备刷新
message C2S_FlushMatchRequest
{
}

//保存pda
message C2S_SaveKdaRequest
{
	optional string kda = 1;
	optional bytes kda_bytes = 2;
}

//保存pda结果
message S2C_SaveKdaResponse
{
	optional int32 res = 1;
}

message S2C_BestTeamFightFinishResponse
{
	optional int32 res = 1;
	optional bool is_win = 2;
	optional int32 score_change = 3;
}

message S2C_ReadyFinishMsg
{
	optional bool is_win = 1;
}

message S2C_FlushMatchResponse
{
	optional EMatchStatus status = 1;
}